// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  name           String?
  email          String    @unique
  emailVerified  DateTime?
  image          String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  hashedPassword String?
  favoriteIds    String[]

  // relations
  accounts     Account[]
  reservations Reservation[]
  listings     Listing[]
}

model Account {
  id                 String  @id @default(uuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refreshToken       String? @db.Text
  accessToken        String? @db.Text
  accessTokenExpires Int?
  tokenType          String?
  scope              String?
  idToken            String? @db.Text
  sessionState       String?

  User User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Listing {
  id            String   @id @default(uuid())
  title         String
  description   String
  listingImage  String
  price         Int
  roomCount     Int
  bathroomCount Int
  maxGuests     Int
  location      String
  amenities     String[]
  createdAt     DateTime @default(now())
  User          User?    @relation(fields: [userId], references: [id])
  userId        String?

  reservations Reservation[]
}

model Reservation {
  id         String   @id @default(uuid())
  userId     String?
  listingId  String?
  startDate  DateTime
  endDate    DateTime
  totalPrice Int
  createdAt  DateTime @default(now())

  Listing Listing? @relation(fields: [listingId], references: [id], onDelete: Cascade)
  User    User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
}
